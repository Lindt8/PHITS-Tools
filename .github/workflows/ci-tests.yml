name: CI Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ feature/improve-testing ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive  # Initialize git submodules

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[develop]"

    - name: Check for critical syntax errors
      run: |
        # Only check for critical errors that would cause crashes
        # E9xx: Runtime errors (syntax errors, indentation errors)
        # F63: Invalid escape sequence  
        # F7x: Logic errors (break/continue outside loop)
        # F82: Undefined name in __all__
        # F83: Undefined name in except handler
        flake8 PHITS_tools/ tests/ \
          --select=E9,F63,F7,F82,F83 \
          --show-source \
          --statistics \
          --count
        
        # Show other issues as warnings only (don't fail CI)
        echo "=== Style warnings (non-blocking) ==="
        flake8 PHITS_tools/ tests/ \
          --ignore=E9,F63,F7,F82,F83 \
          --exit-zero \
          --statistics \
          --count || true

    - name: Run unit tests with coverage
      run: |
        # Run only unit tests (tests/ directory) with coverage
        pytest tests/ \
          --cov=PHITS_tools \
          --cov-report=xml \
          --cov-report=term-missing \
          --cov-fail-under=0 \
          --verbose

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage-unit.xml
        flags: ci-unittests
        name: codecov-unit
        fail_ci_if_error: false  # Don't fail CI if codecov upload fails
        verbose: true
        root_dir: .

    - name: Coverage comment (on PR only)
      if: github.event_name == 'pull_request'
      run: |
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Unit tests achieve ~19% total package coverage, but provide 90+% coverage for the standalone functions in PHITS Tools that end-users are likely to utilize themselves." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Note:** Integration/functional tests (requiring externally distributed PHITS output files, see test/README.md) achieve ~89% total coverage but cannot run in CI." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        pytest tests/ --cov=PHITS_tools --cov-report=term --quiet | grep -E "(TOTAL|\.py)" >> $GITHUB_STEP_SUMMARY || true
        echo '```' >> $GITHUB_STEP_SUMMARY